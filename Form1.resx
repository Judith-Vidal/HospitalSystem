<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAaVJREFUSEvt1jsvBUEYxvEVKjqXlk7cRRQurS+BU9OjIyrxAYTapRe9j6GTuHQq
        hIIK4f8kO4nMvjOzu+eI5jzJL9nMzuXs2dmZydpJpAsLaGAjp2uV6V7LM40zPOM74AmnmETT6YcG/II1
        mEV19QP6UCvDuIbVeRm3GEelqMErrA6rUB9jKJVe3MDqqI57DCAZvVOrA0fv8ACayaLr1Bw4QTSavalO
        tuFnB1Zd5xPR2Z562g90w08P1LnVxgk+tRaA2HcqL7DSAd2z2jiP6EQhi7Aa+GbgZxZWXd88ClmFVdl3
        hUG4DEFlVl3fMgrZglXZ8obL3HteVsYmCqkycF3mwCuwKjsPuEtQHautY/7Vscl1iLI5gtWHmJNLn5O2
        NqvBGspmHVYfwc9J0XZmNTpH2VzA6uMYwUwhtGTuIXbK0L19WG21qk0gmtBTi3atXSxhJKdrlcV2tOjT
        uvzFtqiTTKlo827FQUDr9ygq5V+OPi46sGk7S+3Rv2ki6Z3qlTUdbeL6AfoWrcFE9zRgcvbWiRYArT5a
        Xt2BXtdzCC4O7WRZlv0AL3mYwJLZSQEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>